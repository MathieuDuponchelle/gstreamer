# bash/zsh completion support for ges-launch

DIR="${BASH_SOURCE%/*}"
if [[ ! -d "$DIR" ]]; then DIR="$PWD"; fi

. $DIR/gst

_inspect_all_arguments ()
{
	COMPREPLY=( $(compgen -W "$(gst-inspect-1.0 --help-all | grep -oh '[[:graph:]]*--[[:graph:]]*' | cut -d'=' -f1)" -- $cur) )
}

_inspect_all_elements ()
{
	COMPREPLY=( $(compgen -W "$(gst-completion-helper-1.0 -l)" -- $cur) )
}

___atleast_version () { _mandatory__argument; }

___exists ()
{
	_inspect_all_elements
}

__inspect_main ()
{
	local i=1 command function_exists

	while [[ $i -ne $COMP_CWORD ]];
		do
			local var
			var="${COMP_WORDS[i]}"
			if [[ "$var" == "--"* ]]
			then
				command="$var"
			fi
		i=$[$i+1]
		done

	local completion_func="_${command//-/_}"

	declare -f $completion_func >/dev/null 2>&1

	function_exists=$?

	if [[ "$cur" == "--"* ]]; then
		_inspect_all_arguments
	elif [ $function_exists -eq 0 ]
	then
		$completion_func
	else
		_inspect_all_elements
	fi
}

__inspect_func_wrap ()
{
	local cur prev
	cur="${COMP_WORDS[COMP_CWORD]}"
	prev="${COMP_WORDS[COMP_CWORD-1]}"
	$1
}

# Setup completion for certain functions defined above by setting common
# variables and workarounds.
# This is NOT a public function; use at your own risk.
__inspect_complete ()
{
	local wrapper="__inspect_wrap${2}"
	eval "$wrapper () { __inspect_func_wrap $2 ; }"
	complete -o bashdefault -o default -o nospace -F $wrapper $1 2>/dev/null \
		|| complete -o default -o nospace -F $wrapper $1
}

__inspect_complete gst-inspect-1.0 __inspect_main
